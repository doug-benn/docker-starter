name: docker-starter

services:
  postgres:
    container_name: postgres
    image: postgres:17.3
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready  -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monitoring
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - '5050:80'
    restart: unless-stopped
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  postgres-exporter:
    container_name: postgres-exporter
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: 'postgresql://${POSTGRES_USER}:${POSTGRES_PW}@postgres:5432/${POSTGRES_DB}?sslmode=disable'
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - monitoring
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning/
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  app:
    build:
      context: ./demo-app
      dockerfile: Dockerfile
    deploy:
      replicas: 3
  nginx:
    container_name: nginx
    image: nginx:latest
    depends_on:
      - app
    ports:
      - '8080:8080'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - monitoring

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: prometheus-nginx-exporter
    restart: always
    depends_on:
      - nginx
      - prometheus
    command:
      - -nginx.scrape-uri=https://nginx:8080/stub_status
    networks:
      - monitoring

networks:
  monitoring:

volumes:
  postgres-data:
  pgadmin-data:
  prometheus-data:
  grafana-data:
