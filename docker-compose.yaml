name: docker-starter

services:
  #Database
  postgres:
    container_name: postgres
    image: postgres:17.3
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monitoring
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: unless-stopped
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  postgres-exporter:
    container_name: postgres-exporter
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PW}@postgres:5432/shop?sslmode=disable"
    networks:
      - monitoring

  #Monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - monitoring

networks:
  monitoring:

volumes:
  postgres-data:
  pgadmin-data:
  prom_data: